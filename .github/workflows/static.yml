name: Deploy static content to Pages

on:
  
  # push:
  #   branches: [ "main" ]

  workflow_run:
    workflows: ["Node.js CI"]
    types:
      - completed


  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_frontend:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Frontend folder
      uses: actions/checkout@v3
      with:
        path: DevOpsFrontend
    - name: Use Node.js 20.3.1
      uses: actions/setup-node@v3
      with:
        node-version: 20.3.1
        cache: 'npm'
        cache-dependency-path: DevOpsFrontend/my-app/package-lock.json
    - name: Install Dependencies
      working-directory: ./DevOpsFrontend/my-app
      run: npm i
    - name: Build Project
      working-directory: ./DevOpsFrontend/my-app
      run: npm run build --if-present
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: './DevOpsFrontend/my-app/build'
        name: build
  deploy:
    needs: build_frontend
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./my-app/build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './my-app/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  send_discord_notification:
    runs-on: ubuntu-latest
    needs: [deploy, build_frontend]
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: 'https://discord.com/api/webhooks/1125824673112916149/r3nfgEovUo4HHhjiRLvCaYFn7te-U8fpkREFz-XOFvzURPVBE_U-yWVcKQqBqZCfOLBn'
      uses: Ilshidur/action-discord@master
      with:
        args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'