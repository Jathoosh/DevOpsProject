name: Deploy static content to Pages

on:
  
  push:
    branches: [ "main" ]

  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_frontend:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Frontend folder
      uses: actions/checkout@v3
      with:
        path: DevOpsFrontend
    - name: Use Node.js 20.3.1
      uses: actions/setup-node@v3
      with:
        node-version: 20.3.1
        cache: 'npm'
        cache-dependency-path: DevOpsFrontend/my-app/package-lock.json
    - name: Install Dependencies
      working-directory: ./DevOpsFrontend/my-app
      run: npm i
    - name: Build Project
      working-directory: ./DevOpsFrontend/my-app
      run: npm run build --if-present
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: './DevOpsFrontend/my-app/build'
        name: build
  deploy:
    needs: build_frontend
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./my-app/build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './my-app/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  send_notifaction:

    runs-on: ubuntu-latest

    steps:
      - name: Deployment Success
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.deploy.result == 'success' }}
        with:
            severity: info
            details: Test Succeeded!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Deployment Failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.deploy.result == 'failure' }}
        with:
          severity: error
          details: Test Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Deployment Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.deploy.result == 'cancelled' }}
        with:
          severity: warn
          details: Test Cancelled!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}